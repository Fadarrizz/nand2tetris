// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // If a=0, the outcome is the same as an Half-Adder.
    HalfAdder(a=b, b=c, carry=c1, sum=s1);

    // if a=1, the truth table shows an Or for Carry, and a Nor for Sum.
    // Sum is the exact opposite of Carry in this case. So, we can use a Not gate for this.
    Or(a=b, b=c, out=c2);
    Not(in=c2, out=s2);

    // Finally, we want to check if a is 0 or 1. If 0, output the Half-Adder. Else, output the Or-Nor combination.
    Mux(a=c1, b=c2, sel=a, out=carry);
    Mux(a=s1, b=s2, sel=a, out=sum);
}
