// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/HalfAdder.hdl

/**
 * Computes the sum of two bits.
 */

CHIP HalfAdder {
    IN a, b;    // 1-bit inputs
    OUT sum,    // Right bit of a + b 
        carry;  // Left bit of a + b

    PARTS:
    // When looking at the truth table, we can see that Sum is equal to a Xor gate, and Carry to an And gate.
    // Sum is achievable by using a Xor gate, since we only want to output 1 when we have a 1 from either a or b, not both.
    // When we do get a 1 from both a and b, we want Carry to output a one. Thus, an And gate applies in this case.
    And(a=a, b=b, out=carry);
    Xor(a=a, b=b, out=sum);
}
